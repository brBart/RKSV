diff --git a/pythonforandroid/recipes/cffi/__init__.py b/pythonforandroid/recipes/cffi/__init__.py
index 450c32a..64e0ee9 100644
--- a/pythonforandroid/recipes/cffi/__init__.py
+++ b/pythonforandroid/recipes/cffi/__init__.py
@@ -1,4 +1,5 @@
 from pythonforandroid.recipe import CompiledComponentsPythonRecipe
+import sh
 
 
 class CffiRecipe(CompiledComponentsPythonRecipe):
@@ -13,6 +14,12 @@ class CffiRecipe(CompiledComponentsPythonRecipe):
 	# call_hostpython_via_targetpython = False
 	install_in_hostpython = True
 
+	def get_hostrecipe_env(self, arch=None):
+		env = super(CffiRecipe, self).get_hostrecipe_env(arch)
+		cf = sh.Command('pkg-config')('--cflags', 'libffi')
+		env['CFLAGS'] = ' '.join([env.get('CFLAGS', ''), str(cf)])
+		return env
+
 	def get_recipe_env(self, arch=None):
 		env = super(CffiRecipe, self).get_recipe_env(arch)
 		libffi = self.get_recipe('libffi', self.ctx)
diff --git a/pythonforandroid/recipes/kivy/__init__.py b/pythonforandroid/recipes/kivy/__init__.py
index d92fbe9..2294a8c 100644
--- a/pythonforandroid/recipes/kivy/__init__.py
+++ b/pythonforandroid/recipes/kivy/__init__.py
@@ -11,9 +11,10 @@ class KivyRecipe(CythonRecipe):
     url = 'https://github.com/kivy/kivy/archive/{version}.zip'
     name = 'kivy'
 
-    depends = [('sdl2', 'pygame'), 'pyjnius']
+    depends = [('sdl2', 'pygame'), 'pyjnius', 'android']
 
     # patches = ['setargv.patch']
+    patches = ['sdl2-android-kbd.patch']
 
     def get_recipe_env(self, arch):
         env = super(KivyRecipe, self).get_recipe_env(arch)
diff --git a/pythonforandroid/recipes/kivy/sdl2-android-kbd.patch b/pythonforandroid/recipes/kivy/sdl2-android-kbd.patch
index e69de29..20f2acd 100644
--- a/pythonforandroid/recipes/kivy/sdl2-android-kbd.patch
+++ b/pythonforandroid/recipes/kivy/sdl2-android-kbd.patch
@@ -0,0 +1,29 @@
+diff -urdN kivy-master.org/kivy/core/window/__init__.py kivy-master/kivy/core/window/__init__.py
+--- kivy-master.org/kivy/core/window/__init__.py	2016-08-24 02:28:37.000000000 +0200
++++ kivy-master/kivy/core/window/__init__.py	2016-08-24 22:05:56.067196568 +0200
+@@ -546,8 +546,6 @@
+         return ios.get_kheight()
+ 
+     def _get_android_kheight(self):
+-        if USE_SDL2:  # Placeholder until the SDL2 bootstrap supports this
+-            return 0
+         global android
+         if not android:
+             import android
+@@ -1570,6 +1568,7 @@
+             more information.
+ 
+         '''
++        Window.trigger_keyboard_height()
+ 
+         # release any previous keyboard attached.
+         self.release_keyboard(target)
+@@ -1633,6 +1632,8 @@
+         Internal method for the widget to release the real-keyboard. Check
+         :meth:`request_keyboard` to understand how it works.
+         '''
++        Window.trigger_keyboard_height()
++
+         if self.allow_vkeyboard:
+             key = 'single' if self.single_vkeyboard else target
+             if key not in self._keyboards:
